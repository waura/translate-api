AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  translate-api

  Sample SAM Template for translate-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 180

Parameters:
  CorsAllowOrigins:
    Type: List<String>
    Default: "http://localhost:3000"
    Description: Enter AllowOrigins for CorsConfiguration

Resources:
  TranslateApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v1
      AccessLogSettings:
        DestinationArn: !GetAtt APIGatewayAccessLogs.Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod", "routeKey":"$context.routeKey", "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength", "responseType": "$context.error.responseType", "errorMessage": "$context.error.message", "integration":  { "error": "$context.integration.error", "integrationStatus": "$context.integration.integrationStatus", "latency": "$context.integration.latency", "requestId": "$context.integration.requestId", "status": "$context.integration.status" }'
      FailOnWarnings: true
      CorsConfiguration:
        AllowOrigins: !Ref CorsAllowOrigins
        AllowHeaders:
          - Authorization
          - Content-Type
        AllowMethods:
          - POST
          - OPTIONS
        MaxAge: 600
        AllowCredentials: false
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        Authorizers:
          LambdaAuthorizer:
            AuthorizerPayloadFormatVersion: 2.0
            EnableSimpleResponses: true
            FunctionArn: !GetAtt AuthorizerFunction.Arn
            FunctionInvokeRole: !GetAtt AuthorizerFunctionInvokeRole.Arn
            Identity:
              Headers:
                - Authorization

  APIGatewayAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 90

  AuthorizerFunctionInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
  
  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/authorizer/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - arm64

  TranslateFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/translate/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - arm64
      Policies:
        - TranslateReadOnly
        - CloudWatchReadOnlyAccess
      Environment:
        Variables:
          CHARACTER_COUNT_SUM_LIMIT: 490000
      Events:
        Translate:
          Type: HttpApi
          Properties:
            ApiId: !Ref TranslateApi
            Path: /translate
            Method: post
            TimeoutInMillis: 29000

Outputs:
  TranslateApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${TranslateApi}.execute-api.${AWS::Region}.amazonaws.com/"
  AuthorizerFunction:
    Description: "Authorizer Lambda Function ARN"
    Value: !GetAtt AuthorizerFunction.Arn
  AuthorizerFunctionIamRole:
    Description: "Implicit IAM Role created for Authorizer function"
    Value: !GetAtt AuthorizerFunctionRole.Arn
  TranslateFunction:
    Description: "Translate Lambda Function ARN"
    Value: !GetAtt TranslateFunction.Arn
  TranslateFunctionIamRole:
    Description: "Implicit IAM Role created for Translate function"
    Value: !GetAtt TranslateFunctionRole.Arn
